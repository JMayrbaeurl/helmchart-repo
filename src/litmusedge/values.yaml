# Default values for litmusedge.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: us-docker.pkg.dev/litmus-sales-enablement/litmusedge/litmusedge-std-docker
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: 
  - name: litmus-credential
# This is to override the chart name.
nameOverride: "litmusedge-docker"
fullnameOverride: "litmusedge-docker"

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}

# Requirement of Litmus Edge
securityContext: 
  capabilities:
    add:
      - NET_ADMIN

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 443
  externalAccess: false
  externalName: litmusedge-external
  externalType: LoadBalancer
  externalPort: 443

# Persistence is for setting up the persistent volume more information can be found here: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
persistence:
  create: true
  claimname: litmusedge-data
  size: 10G

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: 
  requests:
    cpu: 1
    memory: 1024Mi
  limits:
    cpu: 4
    memory: 4096Mi

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: 
  - name: litmusedge-data
    persistentVolumeClaim:
      claimName: litmusedge-data

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
  - mountPath: /var
    name: litmusedge-data

nodeSelector: {}

tolerations: []

affinity: {}

# Configuration for Litmus Edge solutions
litmusEdgeSolutions:
  mds:
    enabled: false
    litmusEdgePort: 4222
    mdsNameOverride: "litmusedge-mds"
    mdsFullnameOverride: "litmusedge-mds"
    replicaCount: 1
    imagePullSecrets: 
      - name: litmus-credential
    image:
      repository: us-docker.pkg.dev/litmus-sales-enablement/litmus-edge/litmus-edge-mds
      pullPolicy: IfNotPresent
      tag: "0.0.4"
    env: []
    resources:
      requests:
        cpu: 1
        memory: 512Mi
      limits:
        cpu: 1
        memory: 1024Mi
    volumeMounts: []
    volumes: []

