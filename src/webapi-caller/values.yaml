# Default values for ..
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: jmtestimagesregistry.azurecr.io/paswebapicaller
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v1"

imagePullSecrets: [{ name: jmdevacrcreds}]
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "webapi-caller-sa"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: 
- name: sa-token
  projected:
    sources:
      - serviceAccountToken:
          path: "webapi-caller-sa-token"
          audience: aio-mq
          expirationSeconds: 86400

# Additional volumeMounts on the output Deployment definition.
volumeMounts: 
- name: sa-token
  mountPath: /var/run/secrets/tokens

nodeSelector: {}

tolerations: []

affinity: {}

mqtt:
  brokerUrl: "aio-mq-dmqtt-frontend.azure-iot-operations.svc.cluster.local"
  user: "$sat"
  pwfilepath: "/var/run/secrets/tokens/{{ .Chart.Name }}-sa-token"
  port: 8883
  topic: "serviceinvocation/uns-mapper/request"

api:
  webUrl: "http://uns-mapper-service.azure-iot-operations.svc.cluster.local"
